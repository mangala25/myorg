try {

	node{
		stage('clean-workspace') {				
		echo "current working direcotiy is :" 
		echo pwd
		def workspace = env.WORKSPACE
		echo "workspace directory is ${workspace}"
		//sh 'rm -rf ${workspace}/*'
		//sh 'mvn --version'
		// def mvnTool = new MavenTool('Maven 3.3.9')
		//mvnTool.mvn this, "clean install"
		//mvnTool.mvn this, "clean package"
		echo "before maven clean"
		sh 'java -version'
		sh 'mvn --version' // not working
	    
		maven 'mvn clean'
		echo "after maven clean"
		}
		stage('scm') {
		    echo 'scm'
			wrappers {
				echo 'wrappers'
			}
			
		    //def rtGradle = Artifactory.newMavenBuild()
		    def config = [:]
		    config.serviceRepo = 'https://github.com/varunasunmathi/test.git'
		    config.serviceRepo = 'git@ec2-54-84-120-131.compute-1.amazonaws.com:/home/git/ArchitectureTeam.git'
		    //config.serviceRepo = 'https://github.com/rbhupesh/techinfo.git'
    		    config.gitBranch = 'master'	
			
		    echo "check out branch ${config.gitBranch} from ${config.serviceRepo}"			
                    git branch: config.gitBranch, url: config.serviceRepo //working step
		}
		stage('mvn-build') {
		    echo 'mvn-build'
			// Create an Artifactory Maven instance.
		    //def rtMaven = Artifactory.newMavenBuild()
		    //def buildInfo
		    //buildInfo = rtMaven.run pom: 'maven-example/pom.xml', goals: 'clean install'
		    //sh 'mvn clean install'// running locally
			
			
		    
		}
		stage('mvn-junit') {
		    echo 'mvn-junit'
		}
		stage('mvn-sonar') {
		    echo 'mvn-sonar'
		}
		stage('pcf-push'){
		    echo 'pcf-push'
		}
	
	}
}
catch (e){
	echo 'EXCEPTION OCCURED'
        echo "${e}"
}
